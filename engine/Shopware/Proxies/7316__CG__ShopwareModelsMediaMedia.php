<?php

namespace Shopware\Proxies\__CG__\Shopware\Models\Media;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Media extends \Shopware\Models\Media\Media implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setAlbumId($albumId)
    {
        $this->__load();
        return parent::setAlbumId($albumId);
    }

    public function getAlbumId()
    {
        $this->__load();
        return parent::getAlbumId();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setPath($path)
    {
        $this->__load();
        return parent::setPath($path);
    }

    public function getPath()
    {
        $this->__load();
        return parent::getPath();
    }

    public function setType($type)
    {
        $this->__load();
        return parent::setType($type);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setExtension($extension)
    {
        $this->__load();
        return parent::setExtension($extension);
    }

    public function getExtension()
    {
        $this->__load();
        return parent::getExtension();
    }

    public function setUserId($userId)
    {
        $this->__load();
        return parent::setUserId($userId);
    }

    public function getUserId()
    {
        $this->__load();
        return parent::getUserId();
    }

    public function setCreated($created)
    {
        $this->__load();
        return parent::setCreated($created);
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function setFileSize($fileSize)
    {
        $this->__load();
        return parent::setFileSize($fileSize);
    }

    public function getFileSize()
    {
        $this->__load();
        return parent::getFileSize();
    }

    public function getFormattedFileSize()
    {
        $this->__load();
        return parent::getFormattedFileSize();
    }

    public function getAlbum()
    {
        $this->__load();
        return parent::getAlbum();
    }

    public function setAlbum(\Shopware\Models\Media\Album $album)
    {
        $this->__load();
        return parent::setAlbum($album);
    }

    public function getFile()
    {
        $this->__load();
        return parent::getFile();
    }

    public function setFile(\Symfony\Component\HttpFoundation\File\File $file)
    {
        $this->__load();
        return parent::setFile($file);
    }

    public function getThumbnails()
    {
        $this->__load();
        return parent::getThumbnails();
    }

    public function onSave()
    {
        $this->__load();
        return parent::onSave();
    }

    public function onUpdate()
    {
        $this->__load();
        return parent::onUpdate();
    }

    public function onLoad()
    {
        $this->__load();
        return parent::onLoad();
    }

    public function onRemove()
    {
        $this->__load();
        return parent::onRemove();
    }

    public function createAlbumThumbnails(\Shopware\Models\Media\Album $album)
    {
        $this->__load();
        return parent::createAlbumThumbnails($album);
    }

    public function removeAlbumThumbnails($thumbnailSizes, $fileName)
    {
        $this->__load();
        return parent::removeAlbumThumbnails($thumbnailSizes, $fileName);
    }

    public function getFileName()
    {
        $this->__load();
        return parent::getFileName();
    }

    public function loadThumbnails()
    {
        $this->__load();
        return parent::loadThumbnails();
    }

    public function getDefaultThumbnails()
    {
        $this->__load();
        return parent::getDefaultThumbnails();
    }

    public function setDefaultThumbnails($defaultThumbnails)
    {
        $this->__load();
        return parent::setDefaultThumbnails($defaultThumbnails);
    }

    public function getAttribute()
    {
        $this->__load();
        return parent::getAttribute();
    }

    public function setAttribute($attribute)
    {
        $this->__load();
        return parent::setAttribute($attribute);
    }

    public function getArticles()
    {
        $this->__load();
        return parent::getArticles();
    }

    public function setArticles($articles)
    {
        $this->__load();
        return parent::setArticles($articles);
    }

    public function fromArray(array $array = array (
))
    {
        $this->__load();
        return parent::fromArray($array);
    }

    public function setOneToOne($data, $model, $property, $reference = NULL)
    {
        $this->__load();
        return parent::setOneToOne($data, $model, $property, $reference);
    }

    public function setOneToMany($data, $model, $property, $reference = NULL)
    {
        $this->__load();
        return parent::setOneToMany($data, $model, $property, $reference);
    }

    public function setManyToOne($data, $model, $property)
    {
        $this->__load();
        return parent::setManyToOne($data, $model, $property);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'albumId', 'name', 'description', 'path', 'type', 'extension', 'userId', 'created', 'fileSize', 'album', 'attribute', 'articles', 'blogMedia');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}